!rop
meta: !meta
  opType: raytk.operators.filter.scale
  opVersion: '28'
  opStatus: default
opDef: !def
  enable: !expr
    expr: op('..').par.Enable
  useRuntimeBypass: true
  typeSpec: !ropTypes
    Useinputreturntype: !expr
      expr: op('definition_1').numRows > 1
    coordType: !coordT
      Coordtypefloat: true
      Coordtypevec2: true
      Coordtypevec3: true
    contextType: !contextT
      Allcontexttype: !expr
        expr: op('targetInfo')[1, 'contextType'] == '*'
      Contexttypematerialcontext: !expr
        expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
    returnType: !returnT
      Allreturntype: !expr
        expr: op('definition_1').numRows > 1 and op('targetInfo')[1, 'returnType']
          == '*'
      Returntypesdf: !expr
        expr: op('definition_1').numRows > 1 and op('targetInfo')[1, 'returnType']
          in ('*', 'Sdf')
      Returntypevec4: !expr
        expr: op('targetInfo')[1, 'returnType'] in ('*', 'vec4')
  function: !text
    file: src/operators/filter/scale.glsl
    name: function
  paramGroupTable: eval_params
  help: !text
    file: src/operators/filter/scale.md
    name: help
  keywords:
  - transform
  - scale
paramPages:
- !page
  name: Filter
  pars:
    Enable:
      name: Enable
      label: Enable
      style: Toggle
      default: true
    Scaletype:
      name: Scaletype
      label: Scale Type
      style: Menu
      default: uniform
      menuNames:
      - separate
      - uniform
      menuLabels:
      - Separate XYZ
      - Uniform
    Uniformscale:
      name: Uniformscale
      label: Uniform Scale
      style: Float
      size: 1
      default: 1.0
      enableExpr: me.par.Scaletype in ('uniform',)
      normMin: 0.0
      normMax: 2.0
    Scale:
      name: Scale
      label: Scale
      style: XYZ
      default: 1.0
      enable: false
      enableExpr: me.par.Scaletype in ('separate',)
      normMin: 0.0
      normMax: 2.0
inputs:
- !input
  coordType: !coordT
    Coordtypefloat: true
    Coordtypevec2: true
    Coordtypevec3: true
  contextType: !contextT
    Allcontexttype: !expr
      expr: op('targetInfo')[1, 'contextType'] == '*'
    Contexttypecontext: true
    Contexttypematerialcontext: !expr
      expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
  returnType: !returnT
    Allreturntype: !expr
      expr: op('targetInfo')[1, 'returnType'] == '*'
    Returntypesdf: !expr
      expr: op('targetInfo')[1, 'returnType'] in ('*', 'Sdf')
    Returntypefloat: !expr
      expr: op('targetInfo')[1, 'returnType'] == '*'
    Returntypevec4: !expr
      expr: op('targetInfo')[1, 'returnType'] in ('*', 'vec4')
- !input
  Localalias: scaleField
  coordType: !coordT
    Coordtypefloat: true
    Coordtypevec2: true
    Coordtypevec3: true
  contextType: !contextT
    Allcontexttype: !expr
      expr: op('targetInfo')[1, 'contextType'] == '*'
    Contexttypecontext: true
    Contexttypematerialcontext: !expr
      expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
  returnType: !returnT
    Returntypesdf: true
    Returntypefloat: true
    Returntypevec4: !expr
      expr: parent().par.Scaletype == 'separate'
- !input
  Localalias: pivotField
  coordType: !coordT
    Coordtypefloat: true
    Coordtypevec2: true
    Coordtypevec3: true
  contextType: !contextT
    Allcontexttype: !expr
      expr: op('targetInfo')[1, 'contextType'] == '*'
    Contexttypecontext: true
    Contexttypematerialcontext: !expr
      expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
  returnType: !returnT
    Returntypevec4: true
elements:
- !opElement
  name: transformTarget
  elementType: transformTarget
  params:
    Targetparam: Target
    Applyfunction: THIS_transform
    Bodycodeplaceholder: APPLY_TO_TARGET();
