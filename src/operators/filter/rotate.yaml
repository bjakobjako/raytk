!rop
meta: !meta
  opType: raytk.operators.filter.rotate
  opVersion: '30'
  opStatus: default
paramPages:
- !page
  name: Filter
  pars:
    Enable:
      name: Enable
      label: Enable
      style: Toggle
      default: true
    Rotatemode:
      name: Rotatemode
      label: Rotate Mode
      style: Menu
      default: euler
      menuNames:
      - axis
      - euler
      menuLabels:
      - Axis
      - Euler
    Axis:
      name: Axis
      label: Axis
      style: XYZ
      default:
      - 0.0
      - 1.0
      - 0.0
      enable: false
      startSection: true
      enableExpr: me.par.Rotatemode == 'axis' and (not op('./definition_1')[1, 'coordType']
        or op('./definition_1')[1, 'coordType']!= 'vec2')
      normMin: 0.0
      normMax: 1.0
    Rotate:
      name: Rotate
      label: Rotate
      style: Float
      size: 1
      default: 0.0
      enable: false
      enableExpr: me.par.Rotatemode == 'axis'
      normMin: -180.0
      normMax: 180.0
    Rord:
      name: Rord
      label: Rotate Order
      style: Menu
      default: xyz
      startSection: true
      enableExpr: me.par.Rotatemode == 'euler'
      menuNames:
      - xyz
      - xzy
      - yxz
      - yzx
      - zxy
      - zyx
      menuLabels:
      - Rx Ry Rz
      - Rx Rz Ry
      - Ry Rx Rz
      - Ry Rz Rx
      - Rz Rx Ry
      - Rz Ry Rx
    Rot:
      name: Rot
      label: Rotate XYZ
      style: XYZ
      default: 0.0
      enableExpr: me.par.Rotatemode == 'euler'
      normMin: 0.0
      normMax: 1.0
    Usepivot:
      name: Usepivot
      label: Use Pivot
      style: Toggle
      default: false
      startSection: true
    Pivot:
      name: Pivot
      label: Pivot
      style: XYZ
      default: 0.0
      enable: false
      enableExpr: me.par.Usepivot
      normMin: 0.0
      normMax: 1.0
opDef: !def
  enable: !expr
    expr: op('..').par.Enable
  useRuntimeBypass: !expr
    expr: not parent().par.Optimize
  typeSpec: !ropTypes
    Useinputreturntype: !expr
      expr: op('definition_1').numRows > 1
    coordType: !coordT
      Coordtypevec2: true
      Coordtypevec3: true
    contextType: !contextT
      Allcontexttype: !expr
        expr: op('targetInfo')[1, 'contextType'] == '*'
      Contexttypecontext: true
      Contexttypematerialcontext: !expr
        expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
    returnType: !returnT
      Allreturntype: !expr
        expr: op('definition_1').numRows > 1 and op('targetInfo')[1, 'returnType']
          == '*'
      Returntypesdf: !expr
        expr: op('definition_1').numRows > 1 and op('targetInfo')[1, 'returnType']
          in ('*', 'Sdf')
      Returntypevec4: !expr
        expr: op('targetInfo')[1, 'returnType'] in ('*', 'vec4')
  function: function
  paramGroupTable: params
  macroTable: !table
    file: src/operators/filter/rotate_macros.txt
    name: macro_exprs
    evaluate: true
    evalOpts: !evalOpts {}
  help: !text
    file: src/operators/filter/rotate.md
    name: help
  keywords:
  - transform
  - rotate
  - spin
  - twist
  shortcuts: rot
inputs:
- !input
  Required: !expr
    expr: parent().par.Target != 'coords'
  coordType: !coordT
    Coordtypevec2: true
    Coordtypevec3: true
  contextType: !contextT
    Allcontexttype: !expr
      expr: op('targetInfo')[1, 'contextType'] == '*'
    Contexttypematerialcontext: !expr
      expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
  returnType: !returnT
    Allreturntype: !expr
      expr: op('targetInfo')[1, 'returnType'] == '*'
    Returntypesdf: !expr
      expr: op('targetInfo')[1, 'returnType'] in ('*', 'Sdf')
    Returntypefloat: !expr
      expr: op('targetInfo')[1, 'returnType'] == '*'
    Returntypevec4: !expr
      expr: op('targetInfo')[1, 'returnType'] in ('*', 'vec4')
- !input
  Localalias: rotateField
  coordType: !coordT
    Coordtypevec2: true
    Coordtypevec3: true
  contextType: !contextT
    Allcontexttype: !expr
      expr: op('targetInfo')[1, 'contextType'] == '*'
    Contexttypematerialcontext: !expr
      expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
  returnType: !returnT
    Returntypefloat: !expr
      expr: parent().par.Rotatemode == 'axis'
    Returntypevec4: !expr
      expr: parent().par.Rotatemode == 'euler'
- !input
  Localalias: pivotField
  coordType: !coordT
    Coordtypevec2: true
    Coordtypevec3: true
  contextType: !contextT
    Allcontexttype: !expr
      expr: op('targetInfo')[1, 'contextType'] == '*'
    Contexttypematerialcontext: !expr
      expr: op('targetInfo')[1, 'contextType'] == 'MaterialContext'
  returnType: !returnT
    Returntypevec4: true
elements:
- !opElement
  name: transformTarget
  elementType: transformTarget
  params:
    Targetparam: Target
    Applyfunction: THIS_transform
    Bodycodeplaceholder: APPLY_TO_TARGET();
